@model CMCS.Models.MonthlyClaim
@{
    ViewData["Title"] = "Summary of Your Claim";

    // Serialize the model so we can POST it on "Finish"
    var summaryJson = System.Text.Json.JsonSerializer.Serialize(Model);
}

<div class="container my-4">
    <div class="card shadow-sm border-0">
        <div class="card-body">
            <h2 class="h4 mb-3">Summary of Your Claim</h2>
            <p class="text-muted mb-4">Please review your details below.</p>

            <dl class="row">
                @foreach (var prop in ViewData.ModelMetadata.Properties
                    .Where(p => p.ShowForDisplay && !p.IsComplexType && !string.Equals(p.PropertyName, "Id", StringComparison.OrdinalIgnoreCase)))
                {
                    <dt class="col-sm-4 fw-semibold">@prop.GetDisplayName()</dt>
                    <dd class="col-sm-8">@Html.Display(prop.PropertyName)</dd>
                }
            </dl>

            @{
                var complexProps = ViewData.ModelMetadata.Properties.Where(p => p.ShowForDisplay && p.IsComplexType);
                foreach (var cp in complexProps)
                {
                    var pi = Model?.GetType().GetProperty(cp.PropertyName);
                    var value = pi?.GetValue(Model, null);

                    if (value is System.Collections.IEnumerable list && value is not string)
                    {
                        <h5 class="mt-4">@cp.GetDisplayName()</h5>
                        <div class="table-responsive">
                            <table class="table table-sm table-striped align-middle">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>Item</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int i = 1;
                                        foreach (var item in list)
                                        {
                                            <tr>
                                                <td>@i</td>
                                                <td>@item</td>
                                            </tr>
                                            i++;
                                        }
                                        if (i == 1)
                                        {
                                            <tr><td colspan="2" class="text-muted">No items</td></tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                }
            }

            <div class="d-flex flex-wrap gap-2 mt-4">
                <a asp-action="New" asp-controller="Claims" class="btn btn-outline-secondary">Back</a>

                <!-- Finish: persist and go to My Claims -->
                <form asp-action="Finish" asp-controller="Claims" method="post" class="d-inline" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="summaryJson" value='@summaryJson' />
                    <!-- Optional supporting docs -->
                    <input id="SupportingFiles" name="SupportingFiles" type="file" multiple
                           accept=".pdf,.png,.jpg,.jpeg,.doc,.docx,.xls,.xlsx,.csv,.txt" class="form-control mb-2" />
                    <small class="text-muted d-block mb-2">Attach supporting documents (optional, â‰¤ 20 MB each).</small>
                    <button type="submit" class="btn btn-success">Finish</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    console.log('[Summary] Loaded at', new Date().toISOString());
</script>
}
